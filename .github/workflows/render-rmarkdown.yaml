# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

name: render-rmarkdown

jobs:
  render-rmarkdown:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RENV_PATHS_ROOT: ~/.local/share/renv
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup iRODS demo
        run: |
          cd ./inst/irods_demo
          git submodule sync --recursive
          git submodule update --init --force --recursive --remote
          docker compose up -d nginx-reverse-proxy irods-client-http-api irods-client-icommands
          sleep 5
          docker exec irods-demo-irods-client-icommands-1 iadmin mkuser alice rodsuser
          docker exec irods-demo-irods-client-icommands-1 iadmin moduser alice password passWORD

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2

      - name: Cache packages
        uses: actions/cache@v1
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-

      - name: Restore packages
        shell: Rscript {0}
        run: |
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
          renv::restore(repos = c(CRAN = "https://cloud.r-project.org"))
          if (!requireNamespace("readr", quietly = TRUE)) install.packages("readr")

      - name: Build rirods
        shell: Rscript {0}
        run: |
          if (!requireNamespace("devtools", quietly = TRUE)) install.packages("devtools")
          devtools::install()

      - name: Render Rmarkdown files and Commit Results
        run: |
          PKG_PATH=$(pwd)
          Rscript -e "rmarkdown::render(file.path(getwd(), 'README.Rmd'), output_format = 'md_document')"
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git commit ${PKG_PATH[*]/.Rmd/.md} -m 'Render README' || echo "No changes to commit"
          git push origin || echo "No changes to commit"
